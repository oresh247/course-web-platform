"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç HeyGen API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
"""

import requests
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

try:
    from dotenv import load_dotenv
    load_dotenv()
except ImportError:
    print("‚ùå python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install python-dotenv")
    sys.exit(1)

def test_heygen_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ HeyGen API"""
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ–±—Ö–æ–¥–∞ SSL –ø—Ä–æ–±–ª–µ–º
    os.environ['PYTHONHTTPSVERIFY'] = '0'
    os.environ['CURL_CA_BUNDLE'] = ''
    os.environ['REQUESTS_CA_BUNDLE'] = ''
    
    api_key = os.getenv('HEYGEN_API_KEY')
    if not api_key:
        print("‚ùå HEYGEN_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        print("üìù –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
        print("HEYGEN_API_KEY=your_heygen_api_key_here")
        return False
    
    print(f"üîë API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω: {api_key[:10]}...")
    
    headers = {
        'X-API-KEY': api_key,
        'Content-Type': 'application/json'
    }
    
    try:
        print("üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ HeyGen API...")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–æ–≤ —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π SSL
        response = requests.get(
            'https://api.heygen.com/v1/avatar.list',
            headers=headers,
            timeout=10,
            verify=False  # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É SSL
        )
        
        if response.status_code == 200:
            data = response.json()
            avatars = data.get('data', [])
            print(f"‚úÖ HeyGen API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"üìä –î–æ—Å—Ç—É–ø–Ω–æ –∞–≤–∞—Ç–∞—Ä–æ–≤: {len(avatars)}")
            
            if avatars:
                print("üé≠ –ü—Ä–∏–º–µ—Ä—ã –∞–≤–∞—Ç–∞—Ä–æ–≤:")
                for i, avatar in enumerate(avatars[:3]):
                    print(f"  {i+1}. {avatar.get('avatar_id', 'N/A')} - {avatar.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.SSLError as e:
        print(f"‚ùå SSL –æ—à–∏–±–∫–∞: {e}")
        print("üîß –†–µ—à–µ–Ω–∏–µ: –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
        print("PYTHONHTTPSVERIFY=0")
        return False
        
    except requests.exceptions.ConnectionError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        print("üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        return False
        
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def test_basic_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π"""
    
    print("üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π...")
    
    modules = [
        ('fastapi', 'FastAPI'),
        ('uvicorn', 'Uvicorn'),
        ('pydantic', 'Pydantic'),
        ('requests', 'Requests'),
        ('dotenv', 'Python-dotenv')
    ]
    
    all_ok = True
    
    for module_name, display_name in modules:
        try:
            __import__(module_name)
            print(f"‚úÖ {display_name}")
        except ImportError:
            print(f"‚ùå {display_name} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            all_ok = False
    
    return all_ok

def test_simple_video_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Å—Ç—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ"""
    
    api_key = os.getenv('HEYGEN_API_KEY')
    if not api_key:
        return False
    
    headers = {
        'X-API-KEY': api_key,
        'Content-Type': 'application/json'
    }
    
    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ
    payload = {
        "video_inputs": [
            {
                "character": {
                    "type": "avatar",
                    "avatar_id": "default",
                    "avatar_style": "normal"
                },
                "voice": {
                    "type": "text",
                    "input_text": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ.",
                    "voice_id": "default",
                    "language": "ru"
                },
                "background": {
                    "type": "color",
                    "value": "#ffffff"
                }
            }
        ],
        "dimension": {
            "width": 1920,
            "height": 1080
        },
        "aspect_ratio": "16:9",
        "quality": "high"
    }
    
    try:
        print("üé¨ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ...")
        
        response = requests.post(
            'https://api.heygen.com/v1/video.generate',
            headers=headers,
            json=payload,
            timeout=30,
            verify=False  # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É SSL
        )
        
        if response.status_code == 200:
            data = response.json()
            video_id = data.get('video_id')
            print(f"‚úÖ –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üÜî ID –≤–∏–¥–µ–æ: {video_id}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HeyGen API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π:")
    imports_ok = test_basic_imports()
    
    if not imports_ok:
        print("\n‚ùå –ù–µ –≤—Å–µ –º–æ–¥—É–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ:")
        print("pip install fastapi uvicorn[standard] pydantic requests python-dotenv")
        return
    
    # –¢–µ—Å—Ç 2: HeyGen API
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç HeyGen API:")
    api_ok = test_heygen_api()
    
    if not api_ok:
        print("\n‚ùå HeyGen API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("- API –∫–ª—é—á –≤ .env —Ñ–∞–π–ª–µ")
        print("- –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        print("- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å–µ—Ç–∏")
        return
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ:")
    create_video = input("–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ? (y/n): ").lower().strip()
    
    if create_video == 'y':
        video_ok = test_simple_video_generation()
        if video_ok:
            print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("\n‚ö†Ô∏è API —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –≤–∏–¥–µ–æ")
    else:
        print("\n‚úÖ –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    
    print("\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ —Å HeyGen API!")

if __name__ == "__main__":
    main()
