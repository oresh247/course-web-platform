"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º –≤–∏–¥–µ–æ
"""
import requests
import json
import sys

BASE_URL = "http://localhost:8000"

def test_video_info_api(course_id, module_number, lesson_index):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ –∏–∑ API"""
    print(f"\n{'='*60}")
    print(f"–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ")
    print(f"{'='*60}")
    print(f"–ö—É—Ä—Å ID: {course_id}")
    print(f"–ú–æ–¥—É–ª—å: {module_number}")
    print(f"–£—Ä–æ–∫: {lesson_index}")
    
    try:
        url = f"{BASE_URL}/api/video/lesson/{course_id}/{module_number}/{lesson_index}/info"
        print(f"\nüì° –ó–∞–ø—Ä–æ—Å –∫: {url}")
        
        response = requests.get(url)
        print(f"‚úÖ HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"\nüì¶ –û—Ç–≤–µ—Ç API:")
            print(json.dumps(data, indent=2, ensure_ascii=False))
            
            if data.get('success') and data.get('data'):
                video_info = data['data']
                print(f"\n‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ –Ω–∞–π–¥–µ–Ω–∞:")
                print(f"   - video_id: {video_info.get('video_id')}")
                print(f"   - video_status: {video_info.get('video_status')}")
                print(f"   - video_download_url: {video_info.get('video_download_url')}")
                print(f"   - video_generated_at: {video_info.get('video_generated_at')}")
                
                if video_info.get('video_download_url'):
                    print(f"\nüîó URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:")
                    print(f"   {video_info['video_download_url']}")
                    return True, video_info
                else:
                    print(f"\n‚ùå URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
                    return False, None
            else:
                print(f"\n‚ö†Ô∏è –í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ë–î")
                return False, None
        else:
            print(f"\n‚ùå –û—à–∏–±–∫–∞ HTTP {response.status_code}")
            print(response.text)
            return False, None
            
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False, None


def test_video_status_api(video_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ –∏–∑ HeyGen"""
    print(f"\n{'='*60}")
    print(f"–¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ HeyGen")
    print(f"{'='*60}")
    print(f"Video ID: {video_id}")
    
    try:
        url = f"{BASE_URL}/api/video/status/{video_id}"
        print(f"\nüì° –ó–∞–ø—Ä–æ—Å –∫: {url}")
        
        response = requests.get(url)
        print(f"‚úÖ HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"\nüì¶ –û—Ç–≤–µ—Ç API:")
            print(json.dumps(data, indent=2, ensure_ascii=False))
            
            if data.get('success') and data.get('data'):
                status = data['data']
                print(f"\n‚úÖ –°—Ç–∞—Ç—É—Å –≤–∏–¥–µ–æ:")
                print(f"   - status: {status.get('status')}")
                print(f"   - progress: {status.get('progress')}%")
                print(f"   - download_url: {status.get('download_url')}")
                return True, status
            else:
                print(f"\n‚ö†Ô∏è –°—Ç–∞—Ç—É—Å –Ω–µ –ø–æ–ª—É—á–µ–Ω")
                return False, None
        else:
            print(f"\n‚ùå –û—à–∏–±–∫–∞ HTTP {response.status_code}")
            print(response.text)
            return False, None
            
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False, None


def test_video_download(video_url):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è"""
    print(f"\n{'='*60}")
    print(f"–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ URL –≤–∏–¥–µ–æ")
    print(f"{'='*60}")
    print(f"URL: {video_url}")
    
    try:
        # –î–µ–ª–∞–µ–º HEAD –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        print(f"\nüì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ URL (HEAD –∑–∞–ø—Ä–æ—Å)...")
        response = requests.head(video_url, allow_redirects=True, timeout=10)
        
        print(f"‚úÖ HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   Content-Type: {response.headers.get('Content-Type', 'N/A')}")
        print(f"   Content-Length: {response.headers.get('Content-Length', 'N/A')}")
        
        if response.status_code == 200:
            print(f"\n‚úÖ URL –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è!")
            return True
        elif response.status_code in [301, 302, 303, 307, 308]:
            redirect_url = response.headers.get('Location', 'N/A')
            print(f"\n‚ö†Ô∏è –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞: {redirect_url}")
            return True
        else:
            print(f"\n‚ùå URL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å {response.status_code})")
            return False
            
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ URL: {e}")
        import traceback
        traceback.print_exc()
        return False


def list_all_lessons_with_videos():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—Ä–æ–∫–æ–≤ —Å –≤–∏–¥–µ–æ"""
    print(f"\n{'='*60}")
    print(f"–ü–æ–∏—Å–∫ –≤—Å–µ—Ö —É—Ä–æ–∫–æ–≤ —Å –≤–∏–¥–µ–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    print(f"{'='*60}")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫—É—Ä—Å–æ–≤
        url = f"{BASE_URL}/api/courses/?limit=100&offset=0"
        print(f"\nüì° –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –∫—É—Ä—Å–æ–≤: {url}")
        
        response = requests.get(url)
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤: {response.status_code}")
            return []
        
        courses_data = response.json()
        # API –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º courses
        if isinstance(courses_data, list):
            courses = courses_data
        elif isinstance(courses_data, dict):
            courses = courses_data.get('courses', courses_data.get('data', []))
        else:
            courses = []
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫—É—Ä—Å–æ–≤: {len(courses)}")
        
        lessons_with_video = []
        total_lessons_checked = 0
        
        for course in courses:
            course_id = course.get('id')
            course_title = course.get('course_title', 'N/A')
            
            if not course_id:
                print(f"\n‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ –∫—É—Ä—Å–∞ –±–µ–∑ ID: {course_title}")
                continue
            
            print(f"\nüìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É—Ä—Å–∞: {course_title} (ID: {course_id})")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∫—É—Ä—Å–∞
            course_detail_url = f"{BASE_URL}/api/courses/{course_id}"
            try:
                course_response = requests.get(course_detail_url, timeout=5)
                
                if course_response.status_code != 200:
                    print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∫—É—Ä—Å–∞: HTTP {course_response.status_code}")
                    continue
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª–µ–π –∫—É—Ä—Å–∞: {e}")
                continue
            
            try:
                course_data = course_response.json()
                # API –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º 'course' –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é –æ–±—ä–µ–∫—Ç –∫—É—Ä—Å–∞
                if isinstance(course_data, dict) and 'course' in course_data:
                    course_data = course_data['course']
            except:
                course_data = course_response.json()
            
            if not course_data or not course_data.get('modules'):
                print(f"   ‚ö†Ô∏è –ö—É—Ä—Å –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–æ–¥—É–ª–µ–π")
                continue
            
            modules = course_data.get('modules', [])
            print(f"   üì¶ –ù–∞–π–¥–µ–Ω–æ –º–æ–¥—É–ª–µ–π: {len(modules)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –º–æ–¥—É–ª—å –∏ —É—Ä–æ–∫
            for module in modules:
                module_number = module.get('module_number', 0)
                module_title = module.get('module_title', 'N/A')
                lessons = module.get('lessons', [])
                
                if not lessons:
                    continue
                
                print(f"   üìÑ –ú–æ–¥—É–ª—å {module_number}: {module_title} ({len(lessons)} —É—Ä–æ–∫–æ–≤)")
                
                for lesson_index, lesson in enumerate(lessons):
                    total_lessons_checked += 1
                    lesson_title = lesson.get('lesson_title', 'N/A')
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∏–¥–µ–æ
                    video_info_url = f"{BASE_URL}/api/video/lesson/{course_id}/{module_number}/{lesson_index}/info"
                    try:
                        video_response = requests.get(video_info_url, timeout=5)
                        
                        if video_response.status_code == 200:
                            video_data = video_response.json()
                            
                            if video_data.get('success') and video_data.get('data'):
                                video_info = video_data['data']
                                
                                if video_info:
                                    video_status = video_info.get('video_status', 'N/A')
                                    video_url = video_info.get('video_download_url')
                                    
                                    print(f"      ‚úÖ –£—Ä–æ–∫ {lesson_index}: {lesson_title}")
                                    print(f"         –°—Ç–∞—Ç—É—Å: {video_status}")
                                    print(f"         URL: {'‚úÖ –ï—Å—Ç—å' if video_url else '‚ùå –ù–µ—Ç'}")
                                    
                                    if video_url:
                                        lessons_with_video.append({
                                            'course_id': course_id,
                                            'course_title': course_title,
                                            'module_number': module_number,
                                            'module_title': module_title,
                                            'lesson_index': lesson_index,
                                            'lesson_title': lesson_title,
                                            'video_info': video_info
                                        })
                        elif video_response.status_code == 404:
                            # –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - –≤–∏–¥–µ–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ
                            pass
                        else:
                            print(f"      ‚ö†Ô∏è –£—Ä–æ–∫ {lesson_index}: {lesson_title} - –æ—à–∏–±–∫–∞ HTTP {video_response.status_code}")
                    except Exception as e:
                        print(f"      ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Ä–æ–∫–∞ {lesson_index}: {e}")
        
        return lessons_with_video
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —É—Ä–æ–∫–æ–≤ —Å –≤–∏–¥–µ–æ: {e}")
        import traceback
        traceback.print_exc()
        return []


def main():
    print("="*60)
    print("–¢–ï–°–¢ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò –í–ò–î–ï–û")
    print("="*60)
    
    # –í–∞—Ä–∏–∞–Ω—Ç 1: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) >= 4:
        course_id = int(sys.argv[1])
        module_number = int(sys.argv[2])
        lesson_index = int(sys.argv[3])
        
        success, video_info = test_video_info_api(course_id, module_number, lesson_index)
        
        if success and video_info:
            video_id = video_info.get('video_id')
            download_url = video_info.get('video_download_url')
            
            if video_id:
                test_video_status_api(video_id)
            
            if download_url:
                test_video_download(download_url)
    
    # –í–∞—Ä–∏–∞–Ω—Ç 2: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –≤—Å–µ—Ö —É—Ä–æ–∫–æ–≤ —Å –≤–∏–¥–µ–æ
    else:
        print("\nüîç –ü–æ–∏—Å–∫ –≤—Å–µ—Ö —É—Ä–æ–∫–æ–≤ —Å –≤–∏–¥–µ–æ –≤ —Å–∏—Å—Ç–µ–º–µ...")
        lessons_with_video = list_all_lessons_with_videos()
        
        print(f"\n{'='*60}")
        print(f"–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û–ò–°–ö–ê")
        print(f"{'='*60}")
        print(f"–£—Ä–æ–∫–æ–≤ —Å –≤–∏–¥–µ–æ –Ω–∞–π–¥–µ–Ω–æ: {len(lessons_with_video)}")
        
        if lessons_with_video:
            print(f"\n{'='*60}")
            print("üìπ –°–ü–ò–°–û–ö –£–†–û–ö–û–í –° –í–ò–î–ï–û:")
            print(f"{'='*60}")
            
            for i, lesson in enumerate(lessons_with_video, 1):
                print(f"\n{i}. –ö—É—Ä—Å: {lesson['course_title']}")
                print(f"   –ú–æ–¥—É–ª—å {lesson['module_number']}: {lesson['module_title']}")
                print(f"   –£—Ä–æ–∫ {lesson['lesson_index']}: {lesson['lesson_title']}")
                video_info = lesson['video_info']
                print(f"   Video ID: {video_info.get('video_id', 'N/A')}")
                print(f"   Status: {video_info.get('video_status', 'N/A')}")
                print(f"   URL: {video_info.get('video_download_url', 'N/A')[:80]}..." if video_info.get('video_download_url') else "   URL: ‚ùå –ù–µ—Ç")
                print(f"   Generated: {video_info.get('video_generated_at', 'N/A')}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —É—Ä–æ–∫
            if lessons_with_video:
                first_lesson = lessons_with_video[0]
                print(f"\n{'='*60}")
                print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —É—Ä–æ–∫–∞:")
                print(f"{'='*60}")
                
                test_video_info_api(
                    first_lesson['course_id'],
                    first_lesson['module_number'],
                    first_lesson['lesson_index']
                )
                
                video_info = first_lesson['video_info']
                if video_info.get('video_id'):
                    test_video_status_api(video_info['video_id'])
                
                if video_info.get('video_download_url'):
                    test_video_download(video_info['video_download_url'])
        else:
            print("\n‚ùå –£—Ä–æ–∫–∏ —Å –≥–æ—Ç–æ–≤—ã–º –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   1. –í–∏–¥–µ–æ –µ—â–µ –Ω–µ –±—ã–ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã")
            print("   2. –í–∏–¥–µ–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã, –Ω–æ —Å—Ç–∞—Ç—É—Å –Ω–µ 'completed'")
            print("   3. –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤—ã, –Ω–æ download_url –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î")
            print("   4. –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
            print("\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
            print("   - –§–∞–π–ª video_cache.json –≤ backend/")
            print("   - –õ–æ–≥–∏ backend —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ")
            print("   - –ë–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (lesson_contents —Ç–∞–±–ª–∏—Ü–∞)")
            print("\nüí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —É—Ä–æ–∫–∞:")
            print("   python test_video_diagnostic.py <course_id> <module_number> <lesson_index>")
            print("\n   –ü—Ä–∏–º–µ—Ä:")
            print("   python test_video_diagnostic.py 3 1 0")
    
    print(f"\n{'='*60}")
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    print(f"{'='*60}")


if __name__ == "__main__":
    main()


