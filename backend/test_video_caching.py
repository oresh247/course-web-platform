"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ
"""
import asyncio
import json
import requests
import time

def test_video_caching():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ"""
    
    base_url = "http://localhost:8000"
    course_id = 3
    module_number = 1
    lesson_index = 1
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_request = {
        "title": "–¢–µ—Å—Ç–æ–≤—ã–π —É—Ä–æ–∫",
        "content": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ",
        "avatar_id": "Abigail_expressive_2024112501",
        "voice_id": "9799f1ba6acd4b2b993fe813a18f9a91",
        "language": "ru",
        "quality": "low",
        "regenerate": False
    }
    
    # 1. –ü–µ—Ä–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è (–¥–æ–ª–∂–Ω–∞ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ)
    print("1Ô∏è‚É£ –ü–µ—Ä–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ...")
    response1 = requests.post(
        f"{base_url}/api/video/generate-lesson-cached",
        params={
            "course_id": course_id,
            "module_number": module_number,
            "lesson_index": lesson_index
        },
        json=test_request
    )
    
    if response1.status_code == 200:
        data1 = response1.json()
        print(f"‚úÖ –ü–µ—Ä–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è: {data1['message']}")
        print(f"   –í–∏–¥–µ–æ ID: {data1.get('video_id', 'N/A')}")
        print(f"   –ò–∑ –∫—ç—à–∞: {data1.get('is_cached', False)}")
        
        if data1.get('video_id'):
            video_id = data1['video_id']
            
            # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...")
            time.sleep(10)
            
            # 2. –í—Ç–æ—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å —Ç–µ–º –∂–µ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º (–¥–æ–ª–∂–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à)
            print("\n2Ô∏è‚É£ –í—Ç–æ—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å —Ç–µ–º –∂–µ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º...")
            response2 = requests.post(
                f"{base_url}/api/video/generate-lesson-cached",
                params={
                    "course_id": course_id,
                    "module_number": module_number,
                    "lesson_index": lesson_index
                },
                json=test_request
            )
            
            if response2.status_code == 200:
                data2 = response2.json()
                print(f"‚úÖ –í—Ç–æ—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è: {data2['message']}")
                print(f"   –í–∏–¥–µ–æ ID: {data2.get('video_id', 'N/A')}")
                print(f"   –ò–∑ –∫—ç—à–∞: {data2.get('is_cached', False)}")
                
                if data2.get('is_cached'):
                    print("üéâ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! –í–∏–¥–µ–æ –≤–∑—è—Ç–æ –∏–∑ –∫—ç—à–∞.")
                else:
                    print("‚ö†Ô∏è –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ. –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ.")
            
            # 3. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è
            print("\n3Ô∏è‚É£ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è...")
            test_request["regenerate"] = True
            response3 = requests.post(
                f"{base_url}/api/video/generate-lesson-cached",
                params={
                    "course_id": course_id,
                    "module_number": module_number,
                    "lesson_index": lesson_index
                },
                json=test_request
            )
            
            if response3.status_code == 200:
                data3 = response3.json()
                print(f"‚úÖ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è: {data3['message']}")
                print(f"   –í–∏–¥–µ–æ ID: {data3.get('video_id', 'N/A')}")
                print(f"   –ò–∑ –∫—ç—à–∞: {data3.get('is_cached', False)}")
                
                if not data3.get('is_cached'):
                    print("üéâ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç! –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ.")
                else:
                    print("‚ö†Ô∏è –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –∫—ç—à.")
            
            # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—ç—à–∞
            print("\n4Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞...")
            stats_response = requests.get(f"{base_url}/api/video/cache/stats")
            
            if stats_response.status_code == 200:
                stats = stats_response.json()
                print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞:")
                print(f"   –í—Å–µ–≥–æ –≤–∏–¥–µ–æ: {stats['data']['total_videos']}")
                print(f"   –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö: {stats['data']['completed_videos']}")
                print(f"   –ù–µ—É–¥–∞—á–Ω—ã—Ö: {stats['data']['failed_videos']}")
                print(f"   –ì–µ–Ω–µ—Ä–∏—Ä—É—é—â–∏—Ö—Å—è: {stats['data']['generating_videos']}")
            
            # 5. –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∫—ç—à–∞
            print("\n5Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∫—ç—à–∞...")
            delete_response = requests.delete(
                f"{base_url}/api/video/cache/lesson/{course_id}/{module_number}/{lesson_index}"
            )
            
            if delete_response.status_code == 200:
                delete_data = delete_response.json()
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ: {delete_data['message']}")
            
        else:
            print("‚ùå –ù–µ –ø–æ–ª—É—á–µ–Ω video_id –≤ –ø–µ—Ä–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {response1.status_code}")
        print(response1.text)
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    test_video_caching()
