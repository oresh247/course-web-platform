"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ HeyGen API –±–µ–∑ –º–æ–∫-—Å–µ—Ä–≤–∏—Å–∞
"""

import requests
import os
import sys
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

try:
    from dotenv import load_dotenv
    load_dotenv()
except ImportError:
    print("‚ùå python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install python-dotenv")
    sys.exit(1)

def debug_api_key():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ API –∫–ª—é—á–∞"""
    
    api_key = os.getenv('HEYGEN_API_KEY')
    if not api_key:
        print("‚ùå HEYGEN_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return False
    
    print(f"üîë API –∫–ª—é—á: {api_key}")
    print(f"üìè –î–ª–∏–Ω–∞ –∫–ª—é—á–∞: {len(api_key)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üî§ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {api_key[:5]}...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç
    if not api_key.startswith('sk_'):
        print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ö–ª—é—á –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 'sk_'")
        print("   –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–∞")
    
    return True

def debug_heygen_endpoints():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –≤—Å–µ—Ö endpoints HeyGen"""
    
    api_key = os.getenv('HEYGEN_API_KEY')
    if not api_key:
        return False
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL
    os.environ['PYTHONHTTPSVERIFY'] = '0'
    os.environ['CURL_CA_BUNDLE'] = ''
    os.environ['REQUESTS_CA_BUNDLE'] = ''
    
    headers = {
        'X-API-KEY': api_key,
        'Content-Type': 'application/json',
        'User-Agent': 'AI-Course-Builder/1.0'
    }
    
    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö endpoints
    endpoints = [
        {
            'name': 'Avatar List',
            'url': 'https://api.heygen.com/v1/avatar.list',
            'method': 'GET',
            'description': '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–≤–∞—Ç–∞—Ä–æ–≤'
        },
        {
            'name': 'Voice List',
            'url': 'https://api.heygen.com/v1/voice.list', 
            'method': 'GET',
            'description': '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥–æ–ª–æ—Å–æ–≤'
        },
        {
            'name': 'User Info',
            'url': 'https://api.heygen.com/v1/user.info',
            'method': 'GET',
            'description': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ'
        },
        {
            'name': 'Avatar List (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π)',
            'url': 'https://api.heygen.com/v1/avatars',
            'method': 'GET',
            'description': '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π endpoint –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤'
        },
        {
            'name': 'Voice List (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π)',
            'url': 'https://api.heygen.com/v1/voices',
            'method': 'GET',
            'description': '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π endpoint –¥–ª—è –≥–æ–ª–æ—Å–æ–≤'
        }
    ]
    
    print("üåê –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ HeyGen API endpoints:")
    print("=" * 60)
    
    working_endpoints = []
    failed_endpoints = []
    
    for i, endpoint in enumerate(endpoints, 1):
        print(f"\n{i}Ô∏è‚É£ {endpoint['name']}")
        print(f"   üì° URL: {endpoint['url']}")
        print(f"   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {endpoint['description']}")
        
        try:
            if endpoint['method'] == 'GET':
                response = requests.get(
                    endpoint['url'],
                    headers=headers,
                    timeout=15,
                    verify=False
                )
            else:
                response = requests.post(
                    endpoint['url'],
                    headers=headers,
                    timeout=15,
                    verify=False
                )
            
            print(f"   üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {response.elapsed.total_seconds():.2f}s")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            if response.status_code == 200:
                print(f"   ‚úÖ –£–°–ü–ï–•!")
                try:
                    data = response.json()
                    if 'data' in data:
                        print(f"   üìà –î–∞–Ω–Ω—ã—Ö –ø–æ–ª—É—á–µ–Ω–æ: {len(data['data'])}")
                    if 'total' in data:
                        print(f"   üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {data['total']}")
                except:
                    print(f"   üìÑ –û—Ç–≤–µ—Ç: {response.text[:100]}...")
                working_endpoints.append(endpoint)
                
            elif response.status_code == 403:
                print(f"   ‚ùå –î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–ï–ù (403)")
                try:
                    error_data = response.json()
                    print(f"   üîç –ö–æ–¥ –æ—à–∏–±–∫–∏: {error_data.get('code', 'N/A')}")
                    print(f"   üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {error_data.get('message', 'N/A')}")
                except:
                    print(f"   üìÑ –û—Ç–≤–µ—Ç: {response.text}")
                failed_endpoints.append(endpoint)
                
            elif response.status_code == 401:
                print(f"   ‚ùå –ù–ï–ê–í–¢–û–†–ò–ó–û–í–ê–ù (401)")
                print(f"   üîë –ü—Ä–æ–±–ª–µ–º–∞ —Å API –∫–ª—é—á–æ–º")
                failed_endpoints.append(endpoint)
                
            elif response.status_code == 404:
                print(f"   ‚ùå –ù–ï –ù–ê–ô–î–ï–ù (404)")
                print(f"   üîó Endpoint –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                failed_endpoints.append(endpoint)
                
            else:
                print(f"   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
                print(f"   üìÑ –û—Ç–≤–µ—Ç: {response.text[:200]}...")
                failed_endpoints.append(endpoint)
                
        except requests.exceptions.Timeout:
            print(f"   ‚è∞ –¢–ê–ô–ú–ê–£–¢ - —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
            failed_endpoints.append(endpoint)
            
        except requests.exceptions.ConnectionError as e:
            print(f"   üîå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø: {e}")
            failed_endpoints.append(endpoint)
            
        except Exception as e:
            print(f"   üí• –ù–ï–û–ñ–ò–î–ê–ù–ù–ê–Ø –û–®–ò–ë–ö–ê: {e}")
            failed_endpoints.append(endpoint)
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"‚úÖ –†–∞–±–æ—Ç–∞—é—â–∏—Ö endpoints: {len(working_endpoints)}")
    print(f"‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö endpoints: {len(failed_endpoints)}")
    
    if working_endpoints:
        print("\n‚úÖ –†–ê–ë–û–¢–ê–Æ–©–ò–ï ENDPOINTS:")
        for endpoint in working_endpoints:
            print(f"   - {endpoint['name']}: {endpoint['url']}")
    
    if failed_endpoints:
        print("\n‚ùå –ù–ï –†–ê–ë–û–¢–ê–Æ–©–ò–ï ENDPOINTS:")
        for endpoint in failed_endpoints:
            print(f"   - {endpoint['name']}: {endpoint['url']}")
    
    return len(working_endpoints) > 0

def debug_api_key_permissions():
    """–û—Ç–ª–∞–¥–∫–∞ –ø—Ä–∞–≤ API –∫–ª—é—á–∞"""
    
    api_key = os.getenv('HEYGEN_API_KEY')
    if not api_key:
        return False
    
    print("\nüîê –û–¢–õ–ê–î–ö–ê –ü–†–ê–í API –ö–õ–Æ–ß–ê:")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    header_variations = [
        {
            'name': '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏',
            'headers': {
                'X-API-KEY': api_key,
                'Content-Type': 'application/json'
            }
        },
        {
            'name': '–° Authorization –∑–∞–≥–æ–ª–æ–≤–∫–æ–º',
            'headers': {
                'Authorization': f'Bearer {api_key}',
                'Content-Type': 'application/json'
            }
        },
        {
            'name': '–° API-Key –∑–∞–≥–æ–ª–æ–≤–∫–æ–º',
            'headers': {
                'API-Key': api_key,
                'Content-Type': 'application/json'
            }
        },
        {
            'name': '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏',
            'headers': {
                'X-API-KEY': api_key
            }
        }
    ]
    
    for variation in header_variations:
        print(f"\nüß™ –¢–µ—Å—Ç: {variation['name']}")
        
        try:
            response = requests.get(
                'https://api.heygen.com/v1/avatar.list',
                headers=variation['headers'],
                timeout=10,
                verify=False
            )
            
            print(f"   üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                print(f"   ‚úÖ –£–°–ü–ï–•! –≠—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                return True
            elif response.status_code == 403:
                print(f"   ‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
            elif response.status_code == 401:
                print(f"   ‚ùå –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
            else:
                print(f"   ‚ö†Ô∏è –°—Ç–∞—Ç—É—Å: {response.status_code}")
                
        except Exception as e:
            print(f"   üí• –û—à–∏–±–∫–∞: {e}")
    
    return False

def debug_heygen_documentation():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ HeyGen"""
    
    print("\nüìö –ü–†–û–í–ï–†–ö–ê –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò HEYGEN:")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    doc_urls = [
        'https://docs.heygen.com/',
        'https://api.heygen.com/docs',
        'https://heygen.com/api-docs'
    ]
    
    for url in doc_urls:
        try:
            response = requests.get(url, timeout=10, verify=False)
            print(f"üìñ {url}: {response.status_code}")
        except Exception as e:
            print(f"‚ùå {url}: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏"""
    
    print("üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê HEYGEN API")
    print("=" * 60)
    
    # –û—Ç–ª–∞–¥–∫–∞ 1: API –∫–ª—é—á
    print("\n1Ô∏è‚É£ –û–¢–õ–ê–î–ö–ê API –ö–õ–Æ–ß–ê:")
    key_ok = debug_api_key()
    
    if not key_ok:
        print("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å HEYGEN_API_KEY")
        return
    
    # –û—Ç–ª–∞–¥–∫–∞ 2: Endpoints
    print("\n2Ô∏è‚É£ –û–¢–õ–ê–î–ö–ê ENDPOINTS:")
    endpoints_ok = debug_heygen_endpoints()
    
    # –û—Ç–ª–∞–¥–∫–∞ 3: –ü—Ä–∞–≤–∞ –∫–ª—é—á–∞
    print("\n3Ô∏è‚É£ –û–¢–õ–ê–î–ö–ê –ü–†–ê–í –ö–õ–Æ–ß–ê:")
    permissions_ok = debug_api_key_permissions()
    
    # –û—Ç–ª–∞–¥–∫–∞ 4: –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
    print("\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò:")
    debug_heygen_documentation()
    
    # –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print("\n" + "=" * 60)
    print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:")
    
    if not endpoints_ok and not permissions_ok:
        print("\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: API –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤")
        print("\nüîß –†–ï–®–ï–ù–ò–Ø:")
        print("1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://app.heygen.com/")
        print("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Settings ‚Üí API Keys")
        print("3. –£–¥–∞–ª–∏—Ç–µ —Å—Ç–∞—Ä—ã–π –∫–ª—é—á –∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π")
        print("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª—é—á –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞:")
        print("   - avatar.list")
        print("   - voice.list") 
        print("   - video.generate")
        print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –∫—Ä–µ–¥–∏—Ç–æ–≤")
        print("6. –û–±–Ω–æ–≤–∏—Ç–µ –∫–ª—é—á –≤ .env —Ñ–∞–π–ª–µ")
        
    elif endpoints_ok:
        print("\n‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π")
        print("üöÄ –ú–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É")
        
    else:
        print("\n‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å API")
        print("üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å API –∫–ª—é—á")

if __name__ == "__main__":
    main()
